要会说，要会用
产生背景
是什么
干什么
	Docker是云时代的产物，它的诞生是一种必然
	
	项目上线：
		代码部署：tomcat
			开发人员
			测试人员
			需求人员
		
		软件部署：mysql、nginx、redis、mq等
			需要每个软件都会安装和运维
		
		需要购买服务器：
			需要什么品牌（内存、CPU、硬盘等。。。。术业有专攻）
			对服务器进行运维（网络工程师、机房、运维工程师）
		
		
		云服务：
			申请云中的服务器（不需要机房、不需要网络工程师、不需要运维）
			
			提供mysql开发平台、提供nginx开发平台
			
			直接购买一套OA系统，安装到本地
			直接购买一个OA系统，该软件是已经安装在云服务器，我们可以直接访问，
			不需要开发，不需要测试，不需要运维
			
			
			Saas:软件即服务
					OA、钉钉（阿里）、大象（美团）
			
			
			Paas：平台即服务（直接取镜像市场拉取，基本上是免费的）
					mysql、nginx、rocketmq、mongodb、redis等
					docker就是基于Paas产生的容器技术
			
			Iaas：基础设施即服务：（阿里云，腾讯云）
					4G内存、100T硬盘、10M带宽的服务器
					
					8G内存、100G固态、100M带宽的服务器
			
			
		而Docker是针对Paas服务而产生的容器技术
		
		
		Docker是什么：
			Docker就是一种虚拟化容器技术
			通过Docker这种虚拟化容器技术，我们可以对物理机的资源进行更加合理有效的利用，可以将一台物理机器虚拟化出很多个拥有完整操作系统，并且相互独立的虚拟计算机
			
			不过对于虚拟化技术的理解，我们需要更加深入一些
			
			什么是虚拟化？
				在计算机中，虚拟化是一种资源管理技术，是将计算机的各种实体资源，如服务器，网络，内存即硬盘等，予以抽象，转换后呈现出来，
				打破实体结构间的不可切割的障碍，使用户可以比原本的组态更好的方式来应用这些资源。这些资源的新虚拟部分是不受现有资源的假设方式，地域或物理组态锁限制。
				在实际的生成环境中，虚拟化技术主要用来解决高性能的物理硬件产能过剩和老的旧的硬件产能过低的重组重用，透明化底层物理硬件，从而最大化的利用物理硬件
				
				虚拟化技术种类很多，例如：VMware workstation 和 Docker
				VMware workstation 是全虚拟化的实现
				Docker 是基于操作系统虚拟化技术的一种实现。
				
				
				全虚拟机实现对比操作系统虚拟化
				
				VM VS Docker（看图）
				
				Docker
					启动速度快
					系统资源消耗低：VM只能启动几个，但是docker可以启动很多个
					更轻松的迁移和扩展：镜像
					
		Docker能做什么
			
			
			上手快
			
			项目职责逻辑分类
				场景：开发人员在本地开发没问题，提交到测试环境有了问题，环境不一致导致的
				
				docker可以使开发环境、测试环境、生成环境保持一致
				测试环境和开发环境一致，开发环境直接把镜像迁移到测试环境就行了
				
			
			快速高效的开发周期
				Docker的目标之一就是缩短代码从开发、测试到部署、上线运行的周期，让你的应用程序具备可移植性，易于构建、并易于协作
				（通俗一点说，Docker就像一个盒子，里面可以装很多物件，如果需要这些物件的可以直接将该大盒子拿走，而不需要从盒子中一件一件的取）
				
			鼓励使用面向服务的架构（自动化部署）
				Docker还鼓励面向服务的体系结构和微服务框架。Docker 推荐单个容器只运行一个应用程序或进程，这样就形成了一个分布式的应用程序模型，在这种
				模型下，应用程序或者服务都可以表示为一系列的内部互联的容器，从而使分布式部署应用程序，扩展或调试应用程序都变得非常简单，同时也提高了程序的
				内生性（当然，可以在一个容器中运行多个应用程序）
				
				当然，Docker的强大远远不止于此，而作为软件开发人员的我们，更关注的是如何利用他来搭建一套统一的软件开发环境
		
		Docker和核心概念
			docker包含四个基本概念
				镜像（Image）
				容器(Container)
				仓库注册中心(Registry)
				仓库(Repository)
				
			Registry是集中存放镜像文件的场所
			Repository是对于其中的镜像进行分类管理
			
			一个Registry中会有多个Repository
			一个Repository中会有多个不同tag的image
			
			比如名称为centos的Repository仓库下，有tag为6或者为7的Image镜像
			
			Registry分为公有(public)和私有(private)两种形式
			最大的公有Registry是Docker Hub，存放了数量庞大的镜像供用户下载使用。
			国内的公开Registry包括USTC、网易云，DaoCloud、AliCloud等，可以供大陆用户更稳当快捷的访问
			用户可以在本地创建一个私有Registry
			
			用户创建了自己的镜像之后就可以使用push命令将它上传到公有Registry或者私有Registry中，这样下次
			在另一台机器上使用这个镜像的时候，只需要从Registry上pull下来运行就可以了
			
			
			Docker的安装
				yum install -y docker
					
			
			docker 镜像
				列出镜像
				搜索镜像
				拉取镜像
				删除镜像
				导入导出镜像
			
			docker容器
				以交互方式运行容器：
					docker run -i -t --name 容器名称 repository:tag /bin/bash ----------------i -t 以交互的方式
					docker run -it --name 容器名称 repository:tag /bin/bash  镜像可以用id来表示

				以守护方式运行容器
					docker run -d --name 容器名称 镜像
					
				如果使用run命令创建并进入容器后，如果使用exit命令退出容器，则容器停止。
				再次进入该容器，先使用start命令启动容器，在使用exec/attaach进入容器
				
				
				手动制作镜像
					纯手工制作tomcat镜像
						第一步：下载基础镜像centos7
						安装64位jdk
						 安装tomcat
						 
						 将容器制作成镜像
						 
						 
				容器迁移：
					
				
				
		