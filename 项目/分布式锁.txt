zookeeper实现分布式锁
	节点类型
		持久节点
		临时节点
		顺序节点
		临时顺序节点
		
		
	zk是CP模型，只能由leader修改节点数据
	
	zk锁可靠性思考，zk是CP模型，是可靠的
	
	代码主要是：
		acquire()
		
		acquire(long time, TimeUnit unit);
		
		release()
		
		attemtLock()
		
		变量：basePath,path,lockName
		
		在创建临时顺序节点时，若发现父节点不存在，则创建持久的父节点
		
		释放锁，删除临时顺序节点
		
		后面的节点监听前面的节点
		
		
		小结：
			性能，redis > zk > mysql
			可靠性， zk > mysql > redis
			
			
		接口幂等性问题：
			概念：多个相同的线程对同一个接口进行操作，得到的结果相同（对最终结果不影响），那么这个接口就叫做幂等接口
			GET：幂等
			DELETE：幂等
			PUT：看情况，若更新的是常量则是幂等操作，若更新的是表达式操作，则就不是幂等性操作了（分情况）
			POST：非幂等操作
			
		考虑接口幂等性设计问题：退款案例
					网络抖动请求重试导致发送多个退款请求
					
					怎么做：根据订单ID退款，
							需要判断是否是重复性请求，凭证（mysql/redis）
								MYSQL:加唯一索引
								REDIS:key =orderId
								
								
								还需要设置分布式锁
			
			