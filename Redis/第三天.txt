Redis和lua整合
	什么是lua
		lua是一种轻量小巧的脚本语言，用标准C语言编写
	
	redis中使用lua的好处
		1、减少网络开销
		2、原子性
		3、复用性
		
	Redis消息队列
		MQ主要是用来
			解耦应用
			异步化消息
			流量削峰
			
	分布式锁
		业务场景
			防止用户重复下单
			MQ消息去重
			订单操作变更
			库存超卖
			
				。。。
				分析
				业务场景共性：拥有共同的资源，多个线程要去改变这个资源
					解决方案：互斥，共享资源串行化
					问题转化：锁
					分布式锁是控制分布式系统之间同步访问共享资源的一种方式
					
					
				redis实现分布式锁
					原理
						利用了redis的单线程特性对共享资源进行串行化处理
						
						方式1（使用set命令实现）--推荐
						
						set（推荐）？利用set的互斥性来看谁能操作
						setnx（不推荐）？
						
						释放锁推荐使用redis+lua实现（因为具有原子性操作的特性，因为lua脚本一执行就全执行）
				
				存在的问题：
					单机
					无法保证高可用
					主--从
						无法保证数据的强一致性，在主机宕机时会造成锁的重复获得，
						
					无法续租
						
	CAP模型分析
	
	
	常见缓存问题
	
		数据读
		
			缓存穿透
			
			缓存雪崩
			
			缓存击穿
			
			
		数据写
			互联网业务数据处理的特点
			高吞吐量
				
			保证数据最终一致性
				延时双删
					1、
					2、
					3、
					4、
			
				升级方案
					利用binlog与MQ来解决这个问题
					
					
			关于技术的使用，最终还是具体业务具体分析，根据实际情况，设计程序架构，比如redis的主从如果在一个机房，网络延迟可以忽略，那么实际上就没有强一致性的问题
			重要的数据要考虑放入REDIS的合理性，比如金融等
			
		
		
	
		
		
		