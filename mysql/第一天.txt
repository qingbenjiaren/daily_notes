大厂面试问题
	存储引擎的innoDB与MyISAM的区别，优缺点，使用场景
	说说看MYSQL的优化之道
	UndoLog和RedoLog的区别和联系
	
Mysql架构
	连接器（Connectors）
	系统管理和控制工具（Management Services & Utilities）
	连接池（Connection Pool）
	
	SQL Layer Mysql业务层（Service）
	SQL接口（SQL INTERFACE）
	
	SQL解析器（parser）
		词法解析
		语法解析
	
	查询优化器(Optimizer)
		小结果集驱动大结果集
	
	查询缓存（Cache和BUffer）
		把查询结果存起来
		Map
		
		hash(sql)		value
		
		1.sql有变化，就值不唯一（sql1:where id = 1 name = 2   sql2:where name = 2 and id = 1）这样，会存两份
		2.数据有变化，缓存清除
		
		所以缓存有点鸡肋
	
	储存引擎（Pluggable Storage Engines）
		
		用时间换功能
		
		MyIsam
		innoDB
		memery
		
	储存引擎的选型
		create table xxxx() engin=
		InnoDB：
		MyIsam：
		memery：（不持久化，临时表可以用）
		
		.ibd
		.frm
		
	
	日志文件采用顺序IO方式储存，数据文件采用随机IO方式储存
	
		顺序IO
			记录首地址
			偏移量
			优势：记录速度快，只能追加
			劣势：浪费空间
			
			适合：日志
			
			随机IO
				记录地址	Ox2354
				
				优势：省空间
				劣势：相对慢
				适合：数据+索引（B+Tree）
				
		日志文件
			错误日志
			二进制日志
			通用日志
			慢查询日志
			**重做日志**
			**回滚日志**
			**中继日志**
			
		查看日志开启情况：
			show variables like 'log_%'
			
			
		数据文件
		
		innodb：
			.frm文件：存放表结构
			.ibd:使用独享表空间村粗表数据和索引信息，一张表对应一个ibd文件
			ibdata文件：使用共享表空间储存表数据和索引信息，所有表共同使用一个或多个ibdata文件
			
			
**重点内容**
	索引
		优势：
			可以提高数据检索的效率，降低数据库的IO成本。类似于书的目录
		
		
		劣势：
			索引会占磁盘空间
			索引虽然会提高查询效率，但是会降低更新表的效率，每次操作都要更新索引
			
		
		索引的分类
			单列索引
			组合索引
			全文索引
			空间索引
			位图索引 Oracle
			
		索引的使用：
		
		
		
		
		非聚集索引（Myisam不支持事务，不支持行锁？？？？？？）
			叶子节点上存的是：地址
			
			主键索引和非主键索引不是同一棵树，操作数据时，都会去更新索引树
			
		聚集索引（InnoDB）
			数据挂载在叶子节点上
			
			主键：
				1.建主键
				2.没建主键
					找唯一字段列当主键
					没有唯一字段，自动生成伪列，性能很低，所以要自己建主键
			
				自建主键中，自增整数效率较高，UUID需要排序，联合主键也是这个问题，增加了排序的复杂度，这是性能问题
					雪花算法snowflakes
					
			辅助索引：在辅助索引下，叶子节点上村的是主键ID，所以不建议用uuid和联合索引（空间问题）
			
			辅助索引中，如果是用select * 需要回表，因为查出来的只有ID信息，需要到主键ID树上再查一次
			
			如果字段比较少，可以在辅助索引上加联合索引，这样一棵树就能全部查出来，如果字段较多，回表就回表吧，这个需要综合考虑,分析业务场景
			综上所述，sql语句最好是不用select * 
			
			
			互联网业务一般都不用多表查询
			
			传统系统：业务复杂
			互联项目：业务并不复杂
			


		
				
			
		
		
	
	
	