写好的代码需要具备以下能力
	
	对面向对象的理解
		
		面向对象的四大特性：封装、抽象、继承、多态
		面向对象编程与面向过程编程的区别和联系
		面向对象分析、面向对象设计、面向对象编程
		接口和抽象类的区别以及各自的应用场景
		基于接口而非实现编程的设计思想
		多用组合少用继承的设计思想
		面向过程的贫血模型和面向对象的充血模型
	
	设计原则
		
		SOLID 原则 -SRP 单一职责原则
		SOLID 原则 -OCP 开闭原则
		SOLID 原则 -LSP 里式替换原则
		SOLID 原则 -ISP 接口隔离原则
		SOLID 原则 -DIP 依赖倒置原则
		DRY 原则、KISS 原则、YAGNI 原则、LOD 法则
	设计模式
	
	编码规范
		《代码整洁之道》
	代码重构
		重构的目的（why）、对象（what）、时机（when）、方法（how）；
		保证重构不出错的技术手段：单元测试和代码的可测试性；
		两种不同规模的重构：大重构（大规模高层次）和小重构（小规模低层次）
	
		不仅仅要掌握一些重构技巧、套路，更重要的是建立持续重构意识，把重构当作开发的一部分，融入到日常的开发中。
		
		
课堂讨论
	在今天讲到的内容中，你觉得哪一部分内容对提高代码质量最有效？为什么？除了我罗列的这些内容之外，你还知道哪些可以提高代码质量的方法？
		
		答：
	
	我们知道，最经典的设计模式书籍是 GoF 的《设计模式》，它的中文全称是《设计模式：可复用面向对象软件的基础》，英文全称是“Design Patterns: Elements of Reusable Object-Oriented Software”。为什么它在标题中会特意提到“面向对象”呢？
	
		答：