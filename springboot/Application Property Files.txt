SpringApplication loads properties from application.properties files in the following locations and adds them to the Spring Environment:

1. A /config subdirectory of the current directory 
2. The current directory 
4. A classpath /config package
4. The classpath root
The list is ordered by precedence (properties defined in locations higher in the list override those defined in lower locations). 
If you do not like application.properties as the configuration file name, you can switch to another file name by specifying a spring.
config.name environment property. You can also refer to an explicit location by using the spring.config.location environment property 
(which is a comma-separated list of directory locations or file paths). The following example shows how to specify a different file name:

$ java -jar myproject.jar --spring.config.name=myproject

The following example shows how to specify two locations:

$ java -jar myproject.jar --spring.config.location=classpath:/default.properties,classpath:/override.properties
spring.config.name and spring.config.location are used very early to determine which files have to be loaded. They must be defined as an environment property 
(typically an OS environment variable, a system property, or a command-line argument).
