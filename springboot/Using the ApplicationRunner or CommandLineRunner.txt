If you need to run some specific code once the SpringApplication has started, you can implement 
the ApplicationRunner or CommandLineRunner interfaces. Both interfaces work in the same way and offer 
a single run method, which is called just before SpringApplication.run(…) completes.
The CommandLineRunner interfaces provides access to application arguments as a simple string array, 
whereas the ApplicationRunner uses the ApplicationArguments interface discussed earlier.
 The following example shows a CommandLineRunner with a run method:
 import org.springframework.boot.*;
 import org.springframework.stereotype.*;
	@Component public class MyBean implements CommandLineRunner {
    public void run(String... args) {
         // Do something...
     }
	}

If several CommandLineRunner or ApplicationRunner beans are defined that must be called in a specific
order, you can additionally implement the org.springframework.core.Ordered interface or use the 
org.springframework.core.annotation.Order annotation.
